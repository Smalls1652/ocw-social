FROM docker.io/library/ubuntu:22.04
SHELL ["/bin/bash", "-lc"]

ENV DEBIAN_FRONTEND=noninteractive

RUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime

RUN apt update ; \
    apt upgrade -y

RUN apt install -y \
                curl \
                wget \
                gnupg \
                apt-transport-https \
                lsb-release ca-certificates \
                git

RUN curl -sL https://deb.nodesource.com/setup_16.x | bash -

RUN apt install -y \
                imagemagick \
                ffmpeg \
                libpq-dev \
                libxml2-dev \
                libxslt1-dev \
                file git-core \
                g++ \
                libprotobuf-dev \
                protobuf-compiler \
                pkg-config \
                nodejs \
                gcc \
                autoconf \
                bison \
                build-essential \
                libssl-dev \
                libyaml-dev \
                libreadline6-dev \
                zlib1g-dev \
                libncurses5-dev \
                libffi-dev \
                libgdbm-dev \
                libidn11-dev \
                libicu-dev \
                libjemalloc-dev \
                tini

RUN corepack enable ; \
    yarn set version classic

RUN adduser --disabled-login mastodon

USER mastodon
RUN touch /home/mastodon/.bashrc
SHELL ["/bin/bash", "-lc"]
ENV PATH="/home/mastodon/.rbenv/bin:/home/mastodon/.rbenv/versions/3.0.4/bin:$PATH"

RUN git clone https://github.com/rbenv/rbenv.git /home/mastodon/.rbenv ; \
    echo 'export PATH="/home/mastodon/.rbenv/bin:$PATH"' >> /home/mastodon/.bashrc \
    echo 'eval "$(rbenv init - bash)"' >> /home/mastodon/.bashrc ; \
    exec bash

RUN git clone https://github.com/rbenv/ruby-build.git /home/mastodon/.rbenv/plugins/ruby-build ; \
    cd /home/mastodon/.rbenv ; \
    RUBY_CONFIGURE_OPTS=--with-jemalloc rbenv install 3.0.4 ; \
    rbenv global 3.0.4 ; \
    gem install bundler --no-document

WORKDIR /mastodon
RUN git clone https://github.com/glitch-soc/mastodon.git /mastodon

RUN bundle config deployment "true" ; \
    bundle config without "development test" ; \
    bundle install -j$(getconf _NPROCESSORS_ONLN) ; \
    yarn install --pure-lockfile

ENV RAILS_ENV="production" \
    NODE_ENV="production" \
    RAILS_SERVE_STATIC_FILES="true" \
    BIND="0.0.0.0"

RUN OTP_SECRET=precompile_placeholder SECRET_KEY_BASE=precompile_placeholder bundle exec rails assets:precompile && \
    yarn cache clean

ENTRYPOINT ["/usr/bin/tini", "--"]
EXPOSE 3000 4000